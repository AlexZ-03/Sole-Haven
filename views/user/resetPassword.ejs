<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- SweetAlert CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.min.css">
    <style>
        #errorPass {
            color: red;
            font-size: 0.9rem;
            display: none;
        }
    </style>
</head>
<body>
<div class="container d-flex justify-content-center align-items-center" style="height: 100vh;">
    <div class="row w-100">
        <div class="col-md-6 mx-auto">
            <div class="card shadow-lg">
                <div class="card-body p-4">
                    <h3 class="card-title text-center mb-4">Reset Password</h3>
                    <form id="resetPasswordForm">
                        <div class="form-group">
                            <label for="newPassword">New Password</label>
                            <input type="password" class="form-control" id="newPassword" placeholder="Enter new password" oninput="passValidate()" required>
                            <div id="errorPass"></div>
                        </div>
                        <div class="form-group">
                            <label for="confirmPassword">Confirm Password</label>
                            <input type="password" class="form-control" id="confirmPassword" placeholder="Confirm new password" required>
                        </div>
                        <button type="button" id="resetPasswordBtn" class="btn btn-primary btn-block" disabled>Reset Password</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JS and SweetAlert -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
    const passid = document.getElementById("newPassword");
    const errorPass = document.getElementById("errorPass");
    const resetPasswordBtn = document.getElementById("resetPasswordBtn");

    // Password validation function
    function passValidate() {
        errorPass.style.display = "none";
        errorPass.innerHTML = "";

        const passValue = passid.value;
        const passPattern = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;

        if (passValue.length < 8) {
            errorPass.style.display = "block";
            errorPass.innerHTML = "Password must be at least 8 characters.";
            console.log("Password validation failed: Too short");
            resetPasswordBtn.disabled = true;
        } else if (!passPattern.test(passValue)) {
            errorPass.style.display = "block";
            errorPass.innerHTML = "Password must contain at least one letter, one number, and one special character.";
            console.log("Password validation failed: Does not meet criteria");
            resetPasswordBtn.disabled = true;
        } else {
            errorPass.style.display = "none";
            resetPasswordBtn.disabled = false; // Enable button when password is valid
        }
    }

    resetPasswordBtn.addEventListener("click", async function () {
        const newPassword = document.getElementById("newPassword").value;
        const confirmPassword = document.getElementById("confirmPassword").value;

        if (!newPassword || !confirmPassword) {
            Swal.fire("Error", "Please fill out all fields.", "error");
            return;
        }

        if (newPassword !== confirmPassword) {
            Swal.fire("Error", "Passwords do not match. Please try again.", "error");
            return;
        }

        resetPasswordBtn.disabled = true;
        resetPasswordBtn.innerText = "Processing...";

        try {
            const response = await fetch('/resetPassword', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ password: newPassword })
            });

            const result = await response.json();
            if (result.success) {
                await Swal.fire("Success", "Your password has been reset.", "success");
                window.location.href = "/login";
            } else {
                Swal.fire("Error", result.message || "Failed to reset password.", "error");
                resetPasswordBtn.disabled = false;
                resetPasswordBtn.innerText = "Reset Password";
            }
        } catch (error) {
            Swal.fire("Error", "An error occurred. Please try again.", "error");
            resetPasswordBtn.disabled = false;
            resetPasswordBtn.innerText = "Reset Password";
        }
    });
</script>
</body>
</html>
